--- a/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
+++ b/Source/WebCore/platform/graphics/gstreamer/MediaPlayerPrivateGStreamer.cpp
@@ -269,7 +269,7 @@
     , m_fillTimer(this, &MediaPlayerPrivateGStreamer::fillTimerFired)
     , m_maxTimeLoaded(0)
     , m_bufferingPercentage(0)
-    , m_preload(MediaPlayer::Auto)
+    , m_preload(MediaPlayer::None)
     , m_delayingLoad(false)
     , m_mediaDurationKnown(true)
     , m_maxTimeLoadedAtLastDidLoadingProgress(0)
@@ -1827,14 +1827,14 @@
     if (previousDuration && m_mediaDuration != previousDuration)
         m_player->durationChanged();
 
-    if (m_preload == MediaPlayer::None && m_originalPreloadWasAutoAndWasOverridden) {
-        m_totalBytes = -1;
-        if (totalBytes() && !isLiveStream()) {
-            setPreload(MediaPlayer::Auto);
-            gst_element_set_state(m_playBin.get(), GST_STATE_NULL);
-            gst_element_set_state(m_playBin.get(), GST_STATE_PAUSED);
-        }
-    }
+    //if (m_preload == MediaPlayer::None && m_originalPreloadWasAutoAndWasOverridden) {
+    //    m_totalBytes = -1;
+    //    if (totalBytes() && !isLiveStream()) {
+    //        setPreload(MediaPlayer::Auto);
+    //        gst_element_set_state(m_playBin.get(), GST_STATE_NULL);
+    //        gst_element_set_state(m_playBin.get(), GST_STATE_PAUSED);
+    //    }
+    //}
 }
 
 bool MediaPlayerPrivateGStreamer::supportsMuting() const
@@ -2136,9 +2136,9 @@
 
 void MediaPlayerPrivateGStreamer::setPreload(MediaPlayer::Preload preload)
 {
-    m_originalPreloadWasAutoAndWasOverridden = m_preload != preload && m_preload == MediaPlayer::Auto;
+    //m_originalPreloadWasAutoAndWasOverridden = m_preload != preload && m_preload == MediaPlayer::None;
 
-    m_preload = preload;
+    m_preload = MediaPlayer::None;
 
     ASSERT(m_playBin);
 
